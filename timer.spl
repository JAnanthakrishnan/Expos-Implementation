//-----------------------------Timer Interrupt Handler-------------------------

//save user stack pointer
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

//save context
backup;
alias i R0;

//0 -> swapping not ongoing
//1 -> SWAP_OUT
//2 -> SWAP_IN

//swapping is ongoing or not
if([SYSTEM_STATUS_TABLE + 5] != 0) then
    //swapping is on now
    //Call Swap In/Out, if necessary

    if([SYSTEM_STATUS_TABLE + 1] == 15) then
        //current process is swapper_daemon
        //if paging_status is SWAP_OUT
        if([SYSTEM_STATUS_TABLE + 5] == SWAP_OUT) then
            //swap_out() in pager module
            backup;
            R1 = SWAP_OUT;
            R2 = [SYSTEM_STATUS_TABLE + 1];
            call MOD_6;
            if(R0 == -1) then
                print "SOUTERR";
            endif;
            restore;
        endif;

        //if paging_status is SWAP_IN
        if([SYSTEM_STATUS_TABLE + 5] == SWAP_IN) then
            //swap_in() in pager module
            backup;
            R1 = SWAP_IN;
            R2 = [SYSTEM_STATUS_TABLE + 1];
            call MOD_6;
            if(R0 == -1) then
                print "SINERR";
            endif;
            restore;
        endif;
    endif;
else
    //swapping is not on now, check whether it must be initiated
    if([SYSTEM_STATUS_TABLE + 2] < MEM_LOW) then
        //set paging_status to SWAP_OUT
